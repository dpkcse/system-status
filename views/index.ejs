<%- include('partials/head'); -%>
  <div class="container">

  <!-- FIRST ROW OF BLOCKS -->     
    <div class="row">
    <!-- DONUT CHART BLOCK -->
    <div class="col-sm-3 col-lg-3">
      <div class="dash-unit">
        <dtitle>Memory Status</dtitle>
        <hr>
        <div class="info-user">
          <span aria-hidden="true" class="li_lab fs2"></span>
        </div>
        <span class="chart" id="Memory" data-percent="0">
          <span class="percent"></span>
        </span>
        <p class="easyChartP">Total: <span id="totalRAM"></span> &nbsp; Used: <span id="usedRAM"></span></p>
      </div>
    </div>

    <!-- DONUT CHART BLOCK -->
    <div class="col-sm-3 col-lg-3">
      <div class="dash-unit">
        <dtitle>Disk Space</dtitle>
        <hr>
        <div class="info-user">
          <span aria-hidden="true" class="li_lab fs2"></span>
        </div>
        <span class="chart" id="Disk" data-percent="0">
          <span class="percent"></span>
        </span>
      </div>
    </div>
      
    <div class="col-sm-3 col-lg-3">
    <!-- LOCAL TIME BLOCK -->
      <div class="half-unit">
        <dtitle>Server Time</dtitle>
        <hr>
          <div class="clockcenter">
            <digiclock id="clock">Loading...</digiclock>
          </div>
      </div>

      <!-- SERVER UPTIME -->
      <div class="half-unit networkStatus">
            <dtitle>Network Status</dtitle>
            <hr>
          
          <p><img src="/img/down.png" alt="">
            <bold>Download</bold> | <span id="dVal"></span>
          </p>
          <p><img src="/img/up.png" alt="">
            <bold>Upload</bold> | <span id="uVal"></span>
          </p>
      </div>
    </div>
    <!-- GAUGE CHART BLOCK -->
    <div class="col-sm-3 col-lg-3">
      <div class="dash-unit">
        <dtitle>CPU Status</dtitle>
        <hr>
        <div class="info-user">
          <span aria-hidden="true" class="li_lab fs2"></span>
        </div>
        <canvas id="canvas" width="300" height="300">
        </canvas>
      </div>
    </div>
  </div><!-- /row -->
</div> <!-- /container -->
<div id="footerwrap">
    <footer class="clearfix"></footer>
    <div class="container">
      <div class="row">
        <div class="col-sm-12 col-lg-12">
        <p><img src="/img/logo.png" alt=""></p>
        <p>System Iformation Board - Hyper Remede - Copyright 2018</p>
        </div>

      </div><!-- /row -->
    </div><!-- /container -->		
</div><!-- /footerwrap -->
<%- include('partials/foot'); -%>
<script>
  var socket = io.connect();
  socket.on('connect', function (data) {
    socket.emit('join', 'Hello World from client');
  });

  /**
   * When disconnect event occured
   **/
  socket.on('disconnect', function () {
    console.log('Disconnected');
  });
  
  moment.duration(1, "seconds").timer({
    loop: true,
    wait: 2500,
    executeAfterWait: true
  },
  function () {
    update();
    socket.emit('getRamInfo', function (response) {
      $("#totalRAM").text((Math.round((response.total / 1024) / 1024))+"MB")
      $("#usedRAM").text((Math.round((response.used / 1024) / 1024))+"MB")
      var chart = window.chart = $('#Memory').data('easyPieChart');
      chart.update(((response.used / 1024) / 1024)/100);
    });

    socket.emit('fsSizeStatus', function (response) {
      console.log(response);
      var chart = window.chart = $('#Disk').data('easyPieChart');
      chart.update(response[0].use);
    });

    socket.emit('netWorkStatus', function (response) {
      $("#dVal").text((response.rx_sec/1024).toPrecision(2)+"kbps");
      $("#uVal").text((response.tx_sec/1024).toPrecision(2)+"kbps");
    });

  });

  moment.duration(15, "seconds").timer({
    loop: true,
    wait: 2500,
    executeAfterWait: true
  },
  function () {
    socket.emit('cpuStatus', function (response) {
      new_degrees = response.avg;
      draw()
    });


  });

  $('.chart').easyPieChart({
    easing: 'easeOutBounce',
    onStep: function (from, to, percent) {
      $(this.el).find('.percent').text(Math.round(percent));
    }
  });

  function update() {
    $('#clock').html(moment().format('H:mm:ss'));
  }
</script>
